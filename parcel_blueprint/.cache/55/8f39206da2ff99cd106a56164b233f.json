{"id":"../node_modules/shallowequal/index.js","dependencies":[{"name":"/var/www/parcel_blueprint/package.json","includedInParent":true,"mtime":1583100826176},{"name":"/var/www/parcel_blueprint/.babelrc","includedInParent":true,"mtime":1583098906209},{"name":"/var/www/parcel_blueprint/node_modules/shallowequal/package.json","includedInParent":true,"mtime":1583100825260}],"generated":{"js":"//\n\nmodule.exports = function shallowEqual(objA, objB, compare, compareContext) {\n  var ret = compare ? compare.call(compareContext, objA, objB) : void 0;\n\n  if (ret !== void 0) {\n    return !!ret;\n  }\n\n  if (objA === objB) {\n    return true;\n  }\n\n  if (typeof objA !== \"object\" || !objA || typeof objB !== \"object\" || !objB) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);\n\n  // Test for A's keys different from B.\n  for (var idx = 0; idx < keysA.length; idx++) {\n    var key = keysA[idx];\n\n    if (!bHasOwnProperty(key)) {\n      return false;\n    }\n\n    var valueA = objA[key];\n    var valueB = objB[key];\n\n    ret = compare ? compare.call(compareContext, valueA, valueB, key) : void 0;\n\n    if (ret === false || (ret === void 0 && valueA !== valueB)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n"},"sourceMaps":null,"error":null,"hash":"14f2ca0171ab4d0c86a6d0741c3de0e2","cacheData":{"env":{}}}